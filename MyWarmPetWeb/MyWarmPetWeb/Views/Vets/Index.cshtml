@model IEnumerable<MyWarmPetWeb.Models.Vet>

@{
    ViewBag.Title = "Vets List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<h2>Vets List</h2>
@if (ViewContext.HttpContext.User.IsInRole("Admin"))
{
    <p class="btn btn-default">
        @Html.ActionLink("Create New", "Create")
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayName("Vet Name")
            </th>
            <th>
                @Html.DisplayName("Email Address")
            </th>
            <th>
                @Html.DisplayName("Phone Number")
            </th>
            <th>
                @Html.DisplayName("Satisfied Rate")
            </th>

            <th></th>
        </tr>
    </thead>


    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.VetName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmailAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rate)
            </td>
            <td>
                @if (ViewContext.HttpContext.User.IsInRole("Admin"))
                {
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                    <a>|</a>
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })

                    //ViewBag.VetList  // use
                }

                @*@Html.ActionLink("Details", "Details", new { id = item.Id })*@
            </td>
        </tr>
    }



</table>

<div class="container body-content">
    <h2 class="piechartTit">Number of consultation appointments</h2>
    <div class="piechart"></div>

</div>

@*the code of this chart is reference from Crypters Infotech(2018) Pie Chart using D3.js. YouTube https: //www.youtube.com/watch?v=P8KNr0pDqio *@

@section Scripts {
    @Scripts.Render("~/Scripts/DataTables/jquery.dataTables.js")
    @Scripts.Render("~/Scripts/DataTables/dataTables.bootstrap.js")
    <link href="~/Content/DataTables/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {
            $('.table').DataTable();
        })
    </script>


    <script src="https://d3js.org/d3.v4.min.js"></script>
    <style>
        text {
            font-size: 15px;
            font-weight: bold;
            fill: black;
        }
    </style>

    <script>

        var jsonStr = "@ViewBag.jsonStr";
        jsonStr = jsonStr.replace(/&#39;/g, "'");
        jsonStr = jsonStr.replace(/&quot;/g, "");
        console.log(jsonStr)
        var color = d3.scaleOrdinal(["#00A5E3", "#FF96C5", "#4169E1", "#DE14F5", "#006400", "#D2691E", "#00CDAC", "#FF1493", "#FFA23A", "#74737A", "#DC143C", "#800000", "#8B008B",
            "#CFD61E", "#BC8F8F", "#ADFF2F"]);
        var jsonArray = eval(jsonStr);
        console.log(jsonArray)

        // svg: width, height
        var width = 700, height = 500;


        var svg = d3.select(".piechart").append("svg").attr("width", width).attr("height", height)
            .style("background", "wheat");

        // Generate pie
        var data = d3.pie().sort(null).value(function (d) { return d.Count })(jsonArray);
        console.log(data);

        // Generate segment
        var segments = d3.arc().innerRadius(20)
            .outerRadius(200)
            .padAngle(.05)
            .padRadius(50);

        var sections = svg.append("g").attr("transform", "translate(250,250)")
            .selectAll("path").data(data);

        sections.enter().append("path").attr("d", segments).attr("fill",
            function (d) { return color(d.data.VetName); });

        var content = d3.select("g").selectAll("text").data(data);
            content.enter().append("text").each(function (d) {
            var center = segments.centroid(d);
            d3.select(this).attr("x", center[0]).attr("y", center[1]).text(d.data.Count);
        });

        // Generate legend
        var legends = svg.append("g").attr("transform", "translate(500,300)")
            .selectAll(".legends").data(data);

        var legend = legends.enter().append("g").classed("legends"
            , true).attr("transform", function (d, i) {
                return "translate(0," + (i + 1) * 30 +")";
            });

        legend.append("rect").attr("width", 20).attr("height", 20).attr("x", 5).attr("y",-230)
            .attr("fill",
            function (d) { return color(d.data.VetName); });
        legend.append("text").text(function (d) { return d.data.VetName; })
            .attr("fill", function (d) { return color(d.data.Count); })
            .attr("x", 35).attr("y", -215);



    </script>

}